"use strict";const form=document.forms.userForm,inputId=form.querySelector('input[type="hidden"][name="id"]'),inputName=form.querySelector('input[name="name"]'),inputAge=form.querySelector('input[name="age"]'),btnSave=form.querySelector('button[type="submit"]'),btnReset=form.querySelector('button[type="button"]'),table=document.getElementById("clientsTable");async function getAllUsers(){let t=await fetch("api/users",{method:"GET",headers:{Accept:"application/json"}});if(t.ok){(await t.json()).forEach(t=>{addUserLine(t)})}else console.log("проблеми з підключенням до бази даних")}async function deleteCurrentUser(t){let e=await fetch("api/users/"+t,{method:"DELETE",headers:{Accept:"application/json"}});if(e.ok){removeUserLine((await e.json())._id)}}async function downloadCurrentUser(t){let e=await fetch("api/users/"+t,{method:"GET",headers:{Accept:"application/json"}});if(e.ok){let t=await e.json();inputId.value=t._id,inputName.value=t.name,inputAge.value=t.age}}async function addUser(t){let e=await fetch("api/users",{method:"POST",headers:{Accept:"application/json","Content-type":"application/json"},body:JSON.stringify(t)});if(e.ok){addUserLine(await e.json())}}async function changeUser(t){let e=await fetch("api/users/"+t.id,{method:"PUT",headers:{Accept:"application/json","Content-type":"application/json"},body:JSON.stringify(t)});if(e.ok){let t=await e.json(),n=document.querySelector('tr[id="'+t.id+'"]'),o='                      <tr id="'+t.id+'">                        <td>'+t.id+"</td>                        <td>"+t.name+"</td>                        <td>"+t.age+'</td>                        <td>                            <button class="userForm__button" type="button" data-role="change"> Змінити </button>                            <button class="userForm__button" type="button" data-role="delete"> Видалити </button>                        </td>                      </tr>                    ';n.insertAdjacentHTML("afterEnd",o),n.remove(),resetForm()}}function submitForm(){let t=inputId.value||0,e=inputName.value||0,n=inputAge.value||0;e&&n?t?changeUser({id:t,age:n,name:e}):(addUser({age:n,name:e}),resetForm()):alert("заповніть форму!")}function addUserLine(t){let e='                      <tr id="'+t._id+'">                        <td>'+t._id+"</td>                        <td>"+t.name+"</td>                        <td>"+t.age+'</td>                        <td>                            <button class="userForm__button" type="button" data-role="change"> Змінити </button>                            <button class="userForm__button" type="button" data-role="delete"> Видалити </button>                        </td>                      </tr>                     ';document.querySelector("#clientsTable tbody").insertAdjacentHTML("beforeEnd",e)}function removeUserLine(t){document.querySelector('tr[id="'+t+'"]').remove()}function resetForm(){form.querySelectorAll("input").forEach(t=>{t.value=""})}getAllUsers(),form.addEventListener("submit",(function(t){t.preventDefault(),submitForm()})),btnReset.addEventListener("click",(function(t){resetForm()})),table.addEventListener("click",(function(t){if(t.target.closest('button[data-role="change"]')){downloadCurrentUser(t.target.closest("tr").getAttribute("id"))}if(t.target.closest('button[data-role="delete"]')){deleteCurrentUser(t.target.closest("tr").getAttribute("id"))}}));